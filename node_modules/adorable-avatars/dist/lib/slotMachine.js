'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _hashingFunctions = require('./hashingFunctions');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var SlotMachine = function () {
  function SlotMachine(slots, hashingFn) {
    _classCallCheck(this, SlotMachine);

    this.slots = slots;
    this.numSlots = this.slots.length;
    this.hashingFn = hashingFn || _hashingFunctions.sum;
  }

  _createClass(SlotMachine, [{
    key: 'pull',
    value: function pull(string) {
      var str = string.replace(/\.(png|jpg|gif|)$/g, '');
      var stringArray = str.split('');
      return this.slots[this._indexFor(stringArray)];
    }
  }, {
    key: '_indexFor',
    value: function _indexFor(array) {
      var intArray = array.map(this._getCharInt);
      var index = (this.hashingFn(intArray) + intArray.length) % this.numSlots;
      return Math.abs(index);
    }
  }, {
    key: '_getCharInt',
    value: function _getCharInt(char) {
      return parseInt(char.charCodeAt(0) || 0, 10);
    }
  }]);

  return SlotMachine;
}();

exports.default = SlotMachine;